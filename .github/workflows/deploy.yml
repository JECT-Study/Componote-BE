name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SPRING_PROFILES_ACTIVE: test
      DB_URL: jdbc:h2:mem:testdb
      REDIS_HOST: localhost

    steps:
      # 1. 코드 체크아웃 (서브모듈 포함)
      - name: 코드 체크아웃 (서브모듈 포함)
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}
          fetch-depth: 0  # 전체 커밋 히스토리 가져오기

      # 2. 서브모듈 초기화 및 업데이트
      - name: 서브모듈 초기화 및 업데이트
        run: git submodule update --init --recursive

      # 3. 디스크 공간 확보
      - name: 디스크 공간 확보
        run: |
          echo "Before cleanup:"
          df -h
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/lib/jvm
          sudo docker image prune -a -f
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/share/swift
          echo "After cleanup:"
          df -h

      # 4. Gradle 캐시 초기화 (빌드 실패 방지)
      - name: Gradle 전체 캐시 초기화
        run: rm -rf ~/.gradle

      # 5. JDK 17 설정
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 6. Gradle 실행 권한 부여
      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      # 7. 프로젝트 클린
      - name: 프로젝트 클린
        run: ./gradlew clean --no-daemon

      # 8. 프로젝트 빌드
      - name: 프로젝트 빌드
        run: ./gradlew build --no-daemon --refresh-dependencies -Dorg.gradle.daemon=false
        continue-on-error: true  # 테스트 실패로 인한 중단 방지

      # 9. EC2 서버에 파일 전송
      - name: EC2 서버에 파일 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "build/libs/*.jar"
          target: "~/app/"

      # 10. SSH를 통한 EC2 배포 및 실행
      - name: SSH를 통한 EC2 배포 및 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/app
            java -jar app.jar
